name: Deploy

on:
  workflow_run:
    workflows: ["Tests"]
    types:
      - completed

env:
  DESIRED_ENVIRONMENT: production
  TEST_ENVIRONMENT: test
  PRODUCTION_ENVIRONMENT: production

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Install Dependencies
        run: npm install --no-audit --no-fund --no-optional

      - name: Run Tests
        id: run-tests
        run: npm test

      - name: Check coverage threshold
        id: check-coverage
        if: steps.run-tests.outcome == 'success'
        run: npm run check-coverage-deploy

      - name: Login to Test Azure Registry
        if: ${{ env.DESIRED_ENVIRONMENT == env.TEST_ENVIRONMENT }}
        uses: azure/docker-login@v1
        with:
          login-server: test2dv.azurecr.io
          username: ${{ secrets.TEST_USERNAME }}
          password: ${{ secrets.TEST_PASSWORD }}

      - name: Push to Test Azure Registry
        if: ${{ env.DESIRED_ENVIRONMENT == env.TEST_ENVIRONMENT }}
        run: |
          docker build . -t test2dv.azurecr.io/test:latest
          docker push test2dv.azurecr.io/test:latest

      - name: Login to Production Azure Registry
        if: ${{ env.DESIRED_ENVIRONMENT == env.PRODUCTION_ENVIRONMENT }}
        uses: azure/docker-login@v1
        with:
          login-server: production2dv.azurecr.io
          username: ${{ secrets.PRODUCTION_USERNAME }}
          password: ${{ secrets.PRODUCTION_PASSWORD }}

      - name: Push to Production Azure Registry
        if: ${{ env.DESIRED_ENVIRONMENT == env.PRODUCTION_ENVIRONMENT }}
        run: |
          docker build . -t production2dv.azurecr.io/prod:latest
          docker push production2dv.azurecr.io/prod:latest
